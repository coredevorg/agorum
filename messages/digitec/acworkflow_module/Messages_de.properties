# Common Workflow
acworkflow.workflow.view.home=agorum core workflow 3.0
acworkflow.workflow.view.home.short=workflow 3.0
acworkflow.workflow.workflow.product=workflow
acworkflow.workflow.workflow=Workflow
acworkflow.workflow.step=Prozessschritt
acworkflow.workflow.process=Prozess
acworkflow.workflow.step.internal=Prozessschritt (intern)
acworkflow.workflow.process.internal=Prozess (intern)
acworkflow.workflow.process.status=Status
acworkflow.workflow.process.endDate=Beendet am
acworkflow.workflow.assignee=Bearbeiter
acworkflow.workflow.interaction=Interaktion
acworkflow.workflow.manuallyStartable=Kann direkt gestartet werden
acworkflow.workflow.needsAttachment=Benötigt einen Anhang

# Workflow library
acworkflow.library.error.workflowNotFound=Die angegebene Workflowdefinition "$1" kann nicht gefunden werden
acworkflow.library.error.noWorkflowDefinition=Das angegebene Objekt "$1" ist keine Workflowdefinition

# Workflow Filter
acworkflow.js.workflow.agorumCoreWorkflow=Workflows
acworkflow.js.workflow.workflowDev=Workflow Entwicklung
acworkflow.js.workflow.myworkflows=Meine Workflows
acworkflow.js.workflow.myworkflows.assigned=für mich
acworkflow.js.workflow.myworkflows.acquired=in Bearbeitung (meine)
acworkflow.js.workflow.myworkflows.viewing=unter Beobachtung (meine)
acworkflow.workflow.filter.otherAssignee=anderer Benutzer (wählen)
acworkflow.js.workflow.workflows.notAcquired=nicht angenommen
acworkflow.js.workflow.user=Benutzer
acworkflow.js.workflow.definition=Definition
acworkflow.js.workflow.instance=Instanz
acworkflow.js.workflow.log=Log

# Node "delay"
acworkflow.node.delay.error.noNumberSeconds=Der Parameter "Sekunden" muss numerisch sein
acworkflow.node.delay.error.noNumberMinutes=Der Parameter "Minuten" muss numerisch sein
acworkflow.node.delay.error.noNumberHours=Der Parameter "Stunden" muss numerisch sein
acworkflow.node.delay.error.noNumberDays=Der Parameter "Tage" muss numerisch sein
acworkflow.node.delay.error.noNumberMonths=Der Parameter "Monate" muss numerisch sein
acworkflow.node.delay.error.noNumberYears=Der Parameter "Jahre" muss numerisch sein

# Node "collect"
acworkflow.node.collect.noDistribute=Bitte stellen Sie sicher, dass vor dem "collect" ein "distribute" ausgeführt wurde
acworkflow.node.collect.error.noNumberDone=Der Parameter "Abgeschlossene Tokens" muss numerisch sein
acworkflow.node.collect.error.noNumberOpen=Der Parameter "Offene Tokens" muss numerisch sein
acworkflow.node.collect.error.NoIntoParameter=Tokens, die über den Knoten "Distribute" ohne den Parameter "into" erstellt wurden, können nicht mit dem Knoten "Collect" zusammengeführt werden

# Node "join"
acworkflow.node.join.error.noFork=Bitte stellen Sie sicher, dass vor dem "join" ein "fork" ausgeführt wurde
acworkflow.node.join.error.noNumberDone=Der Parameter "Abgeschlossene Tokens" muss numerisch sein
acworkflow.node.join.error.noNumberOpen=Der Parameter "Offene Tokens" muss numerisch sein

# Metadata
acworkflow.metadata.workflowConfiguration=Workflowkonfiguration
acworkflow.metadata.workflowGroup=Workflowgruppe
acworkflow.metadata.componentType=Komponente
acworkflow.metadata.attachedObjects=Angehängte Objekte
acworkflow.metadata.logEntry=Log-Eintrag
acworkflow.metadata.resubmitDate=Wiedervorlagedatum
acworkflow.metadata.description=Beschreibung
acworkflow.metadata.attachmentPermissionAll=Vollzugriff auf Attachments
acworkflow.metadata.attachmentPermissionWrite=Schreibzugriff auf Attachments
acworkflow.metadata.attachmentPermissionRead=Lesezugriff auf Attachments
acworkflow.metadata.attachmentPermissionCheckout=Checkoutzugriff auf Attachments
acworkflow.metadata.attachmentPermissionProtected=Protectedzugriff auf Attachments

# Handler
acworkflow.js.dataHandler.notSupportedHandler=Es wird nur die Funktion "$1" unterstützt
acworkflow.js.dataHandler.type.group=Gruppe
acworkflow.js.dataHandler.type.user=Benutzer

# Fill variable
acworkflow.js.fill.errorFillingVariables=Es ist ein Fehler beim Füllen der Variablen aufgetreten. Fehler: $1
acworkflow.js.fill.errorLibrary=Es ist ein fehler in der Library aufgetreten. Fehler: $1

# Runtime
acworkflow.js.runtime.parseErrorConfiguration=Fehler beim Parsen der Konfiguration "$1" in der Zeile "$2" mit der Fehlermeldung "$3"
acworkflow.js.runtime.errorDefinitionNotFound=Definiton mit dem Namen "$1" kann in der Workflowdefinition gefunden werden
acworkflow.js.runtime.errorCreateTokenNoTarget=Zum erstellen eines Tokens muss das Zielverzeichnis zur Verfügung gestellt werden
acworkflow.js.runtime.transactionRolledBack=Workflowtransaktion zurückgerollt

# View
acworkflow.js.view.workflow=Workflow
acworkflow.js.view.ok=OK
acworkflow.js.view.name=Name
acworkflow.js.view.owner=Besitzer
acworkflow.js.view.lastModifier=Letzter Änderer
acworkflow.js.view.lastModifyDate=Letztes Änderungsdatum
acworkflow.js.view.createDate=Erstelldatum
acworkflow.js.view.fileSize=Dateigröße
acworkflow.js.view.pleaseWait=Bitte warten...
acworkflow.js.view.noWorkflowStep=Kein Workflow-Schritt
acworkflow.js.view.take=Übernehmen
acworkflow.js.view.giveAway=Abgeben
acworkflow.js.view.takeIt=Annehmen
acworkflow.js.view.anotherUser=Ein anderer Benutzer bearbeitet diesen Workflow bereits.
acworkflow.js.view.changes=Änderungshistorie
acworkflow.js.view.save=Speichern
acworkflow.js.view.notAssignee=Sie sind nicht der Bearbeiter dieses Workflows.
acworkflow.js.view.dateFormat=dd.MM.yyyy HH:mm:ss

# Logviewer
acworkflow.js.logviewer.technicalView=Technische Ansicht
acworkflow.js.logviewer.comparisonView=Vergleichsansicht
acworkflow.js.logviewer.dateFormat=dd.MM.yyyy HH:mm
acworkflow.js.logviewer.errorWrongType=Der Objekttyp der zur Verfügung gestellten Id "$1" entspricht nicht einem Objekt aus der Workflow Runtime. Erwartet wird "Workflowverzeichnis (acwf)", "Workflowtoken (acwt)", "Workflowlog (acwl)" oder "Workflowinstanz (acwi)"
acworkflow.js.logviewer.titleWrongType=Ungültiger Objekttyp
acworkflow.js.logviewer.titleErrorReadLogEntries=Fehler beim ermitteln der Logeinträge
acworkflow.js.logviewer.titleErrorReadWorkflowDefinition=Fehler beim Laden der Workflowdefinition
acworkflow.js.logviewer.errorNoDefinition=Es konnte keine passende Workflowdefinition zum gewählten Log ermittelt werden
acworkflow.js.logviewer.titleMissingId=Fehlende Id
acworkflow.js.logviewer.errorMissingId=Um die Änderungen betrachten zu können muss die ID einer Logdatei im Parameter "id" zur Verfügung gestellt werden
acworkflow.js.logviewer.logEntries=Logeinträge
acworkflow.js.logviewer.token=Token
acworkflow.js.logviewer.node=Node
acworkflow.js.logviewer.actionDate=Ausführungsdatum
acworkflow.js.logviewer.errorNoLog=Logdatei für die Änderungshistorie kann nicht gefunden werden
acworkflow.js.logviewer.flowChart.title=Verlaufsdiagramm
acworkflow.js.logviewer.data.title=Daten
acworkflow.js.logviewer.pleaseWait=Bitte warten

# Logviewer technical view
acworkflow.js.logviewtechnical.pleaseWait=Bitte warten...
acworkflow.js.logviewtechnical.noStepUi=Die Workflowoberfläche konnte aufgrund einer ungültigen Oberfläche nicht geladen werden
acworkflow.js.logviewtechnical.stepUi=Oberfläche Workflowschritt
acworkflow.js.logviewtechnical.instanceInformation=Instanzinformationen
acworkflow.js.logviewtechnical.tokenInformation=Tokeninformationen

# Logviewer comparison view
acworkflow.js.logviewcomparison.variable=Variable
acworkflow.js.logviewcomparison.changedBy=Änderer
acworkflow.js.logviewcomparison.previousValue=Vorheriger Wert
acworkflow.js.logviewcomparison.currentValue=Aktueller Wert
acworkflow.js.logviewcomparison.variableScope=Änderungsbereich
acworkflow.js.logviewcomparison.changeType=Änderungstyp
acworkflow.js.logviewcomparison.changeInitiator=Auslöser
acworkflow.js.logviewcomparison.name=Name
acworkflow.js.logviewcomparison.owner=Besitzer
acworkflow.js.logviewcomparison.lastModifier=Letzter Änderer
acworkflow.js.logviewcomparison.lastModifyDate=Letztes Änderungsdatum
acworkflow.js.logviewcomparison.createDate=Erstelldatum
acworkflow.js.logviewcomparison.fileSize=Dateigröße
acworkflow.js.logviewcomparison.differenceData=Unterschiede Daten
acworkflow.js.logviewcomparison.errorStepUi=Die Workflowoberfläche konnte aufgrund einer ungültigen Oberfläche nicht geladen werden
acworkflow.js.logviewcomparison.noAssignee=Keine Informationen zum Änderer vorhanden oder keine Berechtigung diese zu sehen
acworkflow.js.logviewcomparison.noStepUi=Es steht keine Workflowoberfläche zur Verfügung
acworkflow.js.logviewcomparison.noAttachment=Ungültiger Anhang oder Objekt nicht vorhanden
acworkflow.js.logviewcomparison.dateFormat=dd.MM.yyyy HH:mm:ss
acworkflow.js.logviewcomparison.pleaseWait=Bitte warten...

#Workflow repository
acworkflow.repository.load.objectNotFound=Die übergebene Id "$1" kann nicht gefunden werden. Bitte stellen Sie sicher, dass Sie nur existierende Ids übergeben
acworkflow.repository.save.objectNotFound=Die übergebene Id "$1" kann nicht gefunden werden. Bitte stellen Sie sicher, dass Sie nur existierende Ids übergeben
acworkflow.repository.set.keyStringError=Der Parameter "key" muss vom Typ String sein
acworkflow.repository.note.messageStringError=Der Parmaeter "message" muss vom Typ String sein
acworkflow.repository.note.targetNotFound=Zielobjekt kann nicht gefunden werden

# configuration widgets (nodes)
# User/Group widget
acworkflow.js.assign.usergroupconfigelement.userGroup=Benutzer/Gruppe
acworkflow.js.assign.usergroupconfigelement.attachment=Attachmentberechtigung
acworkflow.js.assign.usergroupconfigelement.define=Benutzer-/Gruppenzuordnung setzen

# Assign configuration widget
acworkfloweditor.js.assignconfigurationaon.assignee=Benutzer/Gruppen (Bearbeiter)
acworkfloweditor.js.assignconfigurationaon.assignee.help=Setzt die definierten Benutzer / Gruppen des passierenden Tokens als Bearbeiter des Workflowschritts und aller nachfolgenden Schritte.
acworkfloweditor.js.assignconfigurationaon.assigneeLabel=Benutzer/Gruppen
acworkfloweditor.js.assignconfigurationaon.attachmentLabel=Attachmentberechtigung
# Viewer configuration widget
acworkfloweditor.js.assignconfigurationaon.viewer=Benutzer/Gruppen (Betrachter)
acworkfloweditor.js.assignconfigurationaon.viewer.help=Setzt die definierten Benutzer / Gruppen als Betrachter des Workflowschritts und aller nachfolgenden Schritte. Betrachter können den Schritt in der Bedienoberfläche nur sehen (lesenden Zugriff), aber nicht selbst mit dem Workflowschritt arbeiten.
acworkfloweditor.js.assignconfigurationaon.viewerLabel=Benutzer/Gruppen

# Collect configuration widget
acworkfloweditor.js.collectconfigurationaon.open=Offene Tokens
acworkfloweditor.js.collectconfigurationaon.done=Abgeschlossene Tokens
acworkfloweditor.js.collectconfigurationaon.open.help=Definiert, wie viele Tokens noch nebenläufig im Workflow vorhanden sein müssen, damit der Workflow an dieser Stelle beim nächsten eingehenden Token fortgeführt wird.
acworkfloweditor.js.collectconfigurationaon.done.help=Definiert, wie viele Tokens bereits in dem Knoten eingegangen sein müssen, damit der Workflow an dieser Stelle beim nächsten eingehenden Token fortgeführt wird.

# Condition configuration widget
acworkfloweditor.js.conditionconfigurationaon.condition=Bedingung
acworkfloweditor.js.conditionconfigurationaon.condition.help=Prüft die eingesetzte Bedingung auf Wahr/Falsch (true/false).

# Decision configuration widget
acworkfloweditor.js.decisionconfigurationaon.decision=Entscheidung
acworkfloweditor.js.decisionconfigurationaon.decision.help=Entscheidet abhängig von zuvor eingesetzten Variablen, welches Outlet im Knoten angesteuert werden soll.

# Delay configuration widget
acworkfloweditor.js.delayconfigurationaon.seconds=Sekunden
acworkfloweditor.js.delayconfigurationaon.minutes=Minuten
acworkfloweditor.js.delayconfigurationaon.hours=Stunden
acworkfloweditor.js.delayconfigurationaon.days=Tage
acworkfloweditor.js.delayconfigurationaon.months=Monate
acworkfloweditor.js.delayconfigurationaon.years=Jahre

# Distribute configuration widget
acworkfloweditor.js.distributeconfiguration.distribute=Von Variable
acworkfloweditor.js.distributeconfiguration.into=In Variable
acworkfloweditor.js.distributeconfiguration.distribute.help=Definiert, aus welcher Variable das System das Array ausliest.
acworkfloweditor.js.distributeconfiguration.into.help=Definiert, in welche Variable das System das Array schreibt.

# Join configuration widget
acworkfloweditor.js.joinconfigurationaon.open=Offene Tokens
acworkfloweditor.js.joinconfigurationaon.done=Abgeschlossene Tokens
acworkfloweditor.js.joinconfigurationaon.open.help=Definiert, wie viele Tokens / Wege noch nebenläufig im Workflow vorhanden sein müssen, damit der Workflow an dieser Stelle beim nächsten eingehenden Token / Weg fortgeführt wird.
acworkfloweditor.js.joinconfigurationaon.done.help=Definiert, wie viele Tokens / wege bereits in dem Knoten eingegangen sein müssen, damit der Workflow an dieser Stelle beim nächsten eingehenden Token / Weg fortgeführt wird.

# Load configuration widget
acworkfloweditor.js.loadconfigurationaon.from=Quelle
acworkfloweditor.js.loadconfigurationaon.filter=Filter
acworkfloweditor.js.loadconfigurationaon.into=Zielvariable
acworkfloweditor.js.loadconfigurationaon.from.help=Definiert die Objekte, von denen die Metadaten gelesen werden sollen.
acworkfloweditor.js.loadconfigurationaon.filter.help=Filtert die gesammelten Metadaten der Objekte, die im Parameter "Quelle" angegeben wurden anhand des Namens. Es kann ein Teilstring oder ein Regex angegeben werden.
acworkfloweditor.js.loadconfigurationaon.into.help=Definiert den Namen einer Variablen, in die alle gelesenen und gefilterten Metadaten abgelegt werden soll.

# Save configuration widget
acworkfloweditor.js.saveconfigurationaon.from=Quellvariable
acworkfloweditor.js.saveconfigurationaon.filter=Filter
acworkfloweditor.js.saveconfigurationaon.into=Zielobjekte
acworkfloweditor.js.saveconfigurationaon.from.help=Definiert, aus welcher Variablen des Workflows die Metadaten gelesen werden sollen.
acworkfloweditor.js.saveconfigurationaon.filter.help=Filtert die gesammelten Informationen aus dem Parameter "Quellvariable". Es kann ein Teilstring oder ein Regex angegeben werden.
acworkfloweditor.js.saveconfigurationaon.into.help=Definiert, auf welchen Objekten die Variablen / Metadaten geschrieben werden sollen.

# Script configuration widget
acworkfloweditor.js.scriptconfiguration.valueArray=Der Wert ist ein Array.
acworkfloweditor.js.scriptconfiguration.valueObject=Der Wert ist ein Objekt.
acworkfloweditor.js.scriptconfiguration.rawEditor=Bitte über den Raw-Editor editieren.
acworkfloweditor.js.scriptconfiguration.errorKey=Schlüssel ist bereits vorhanden. Bitte einen anderen Schlüssel wählen
acworkfloweditor.js.scriptconfiguration.errorBrackets=Alle geöffneten Klammern müssen wieder geschlossen sein
acworkfloweditor.js.scriptconfigurationaon.key=Schlüssel
acworkfloweditor.js.scriptconfigurationaon.value=Wert

# Set configuration widget
acworkfloweditor.js.setconfigurationaon.key=Schlüssel
acworkfloweditor.js.setconfigurationaon.value=Wert
acworkfloweditor.js.setconfigurationaon.global=Global
acworkfloweditor.js.setconfigurationaon.global.text=Wert global setzen
acworkfloweditor.js.setconfigurationaon.key.help=Definiert den Namen einer Variablen, die mit einem Wert befüllt werden soll. Ist die Variable nicht vorhanden, wird sie angelegt, ansonsten angepasst.
acworkfloweditor.js.setconfigurationaon.value.help=Definiert den Wert für eine Variable. Ist die Variable vorhanden, wird deren Wert mit dem verwendeten ersetzt. Lassen Sie den Wert leer, um die Variable unter "Schlüssel" zu löschen.
acworkfloweditor.js.setconfigurationaon.global.help=Definiert, ob die Variable sowie deren Wert öffentlich gemacht werden sollen. Das bedeutet, die Variable und deren Wert kann auch in anderen Token verwendet werden, die den "save"-Knoten nicht passiert haben.

# Ui configuration widget
acworkfloweditor.js.uiconfigurationaon.assignee=Benutzer/Gruppe
acworkfloweditor.js.uiconfigurationaon.viewer=Benutzer/Gruppe
acworkfloweditor.js.uiconfigurationaon.assignee.label=Benutzer/Gruppe (Bearbeiter)
acworkfloweditor.js.uiconfigurationaon.viewer.label=Benutzer/Gruppe (Betrachter)
acworkfloweditor.js.uiconfigurationaon.attachmentPermission=Attachmentberechtigung
acworkfloweditor.js.uiconfigurationaon.aguila=Oberflächenscript
acworkfloweditor.js.uiconfigurationaon.assignee.help=Setzt die definierten Benutzer / Gruppen des passierenden Tokens als Bearbeiter des Workflowschritts und aller nachfolgenden Schritte.
acworkfloweditor.js.uiconfigurationaon.viewer.help=Setzt die definierten Benutzer / Gruppen als Betrachter des Workflowschritts und aller nachfolgenden Schritte. Betrachter können den Schritt nur sehen, aber nicht selbst bearbeiten.
acworkfloweditor.js.uiconfigurationaon.aguila.help=Erstellt ein Skript für das UI, das dem Bearbeiter angezeigt wird.
acworkfloweditor.js.uiconfigurationaon.outletVariable=Outlet Variable
acworkfloweditor.js.uiconfigurationaon.outletVariable.help=Speichert in der Variable, die hier angegeben wird, das Outlet über das der UI Knoten verlassen wurde.
acworkfloweditor.js.uiconfigurationaon.displayName=Anzeigename
acworkfloweditor.js.uiconfigurationaon.displayName.help=Definiert den Namen, den das System im Workflow anzeigt.
acworkfloweditor.js.uiconfigurationaon.events=Events
acworkfloweditor.js.uiconfigurationaon.events.help=Erstellt ein Skript, das aufgerufen wird, wenn im UI bestimmte Aktionen durchgeführt werden (Workflow annehmen, Workflow abgeben, speichern und verlassen).

# Script configuration widget
acworkfloweditor.js.scriptconfigurationaon.enter=Enter script
acworkfloweditor.js.scriptconfigurationaon.update=Update script
acworkfloweditor.js.scriptconfigurationaon.enter.help=Wird ausgeführt, sobald der Workflow den Knoten erreicht.
acworkfloweditor.js.scriptconfigurationaon.update.help=Wird ausgeführt, sobald der Wartezustand aufgelöst wird.

# configuration script editor
acworkfloweditor.js.configuration.scripteditor.add=Script erstellen
acworkfloweditor.js.configuration.scripteditor.load=Script laden
acworkfloweditor.js.configuration.scripteditor.delete=Script löschen
acworkfloweditor.js.configuration.scripteditor.run=Script ausführen
acworkfloweditor.js.configuration.scripteditor.open=Script in neuem Tab bearbeiten
acworkfloweditor.js.configuration.scripteditor.scriptDeleteTitle=Achtung
acworkfloweditor.js.configuration.scripteditor.scriptDeleteText=Wollen Sie das Script wirklich löschen? (Das Script wird erst gelöscht, wenn der Workflow gespeichert wird)
acworkfloweditor.js.configuration.scripteditor.searchScript=Suche
acworkfloweditor.js.configuration.scripteditor.pickScript=Ordnerauswahl
acworkfloweditor.js.configuration.scripteditor.close=Schließen
acworkfloweditor.js.configuration.scripteditor.notMyScript=Dieses Script ist ein externes Script und kann daher nicht direkt bearbeitet werden: "$1"

# Wait configuration widget
acworkfloweditor.js.waitconfigurationaon.resolve=Benutzung einer Variablen oder eines Inline-JavaScript
acworkfloweditor.js.waitconfigurationaon.targetDate=Zieldatum
acworkfloweditor.js.waitconfigurationaon.targetDate.help=/agorum/roi/customers/acworkflow/repository/agorum/flow/wait/de.html

# comment
agorum.workflow.node.comment.description=Mit diesem Knoten können Kommentare zum Prozessdiagramm hinzugefügt werden.

# node groups
agorum.workflow.node.group.data=Daten
agorum.workflow.node.group.flow=Programmablauf
agorum.workflow.node.group.interaction=Interaktion
agorum.workflow.node.group.common=Allgemein
agorum.workflow.node.group.directSubWorkflows=Zugehörige Subworkflows

# node descriptions
agorum.workflow.node.data.load.description=Metadaten von Objekten/Attachments laden und als Workflow-Variablen verwenden.
agorum.workflow.node.data.save.description=Workflow-Variablen als Metadaten auf Objekte/Attachment speichern.
agorum.workflow.node.data.set.description=Setzen von Workflow-Variablen.
agorum.workflow.node.flow.collect.description=Sammeln von Variablen-Werten aus einem vorangegangenen "distribute" Knoten.
agorum.workflow.node.flow.condition.description=Abfrage von Bedingungen für die weitere Flußsteuerung (Wenn/if).
agorum.workflow.node.flow.decision.description=Flußsteuerung (Outlet) über eine Workflow-Variable oder Expression.
agorum.workflow.node.flow.delay.description=Warten (Tage, Monate, Jahre, Stunden, Minuten, Sekunden)
agorum.workflow.node.flow.distribute.description=Starten von parallel laufenden Schritten, in Abhängigkeit einer Array-Variable.
agorum.workflow.node.flow.fork.description=Aufsplittung auf definierte parallele Schritte.
agorum.workflow.node.flow.join.description=Warten auf die Fertigstellung von mehreren parallel laufenden Schritten, die über einen vorangegangenen "fork" aufgeteilt wurden.
agorum.workflow.node.flow.wait.description=Warten auf einen Termin/Zeitpunkt.
agorum.workflow.node.interaction.assign.description=Zuweisen von Benutzern/Gruppen für alle folgenden Schritte (Swimlane).
agorum.workflow.node.interaction.ui.description=Eingabemaske für Benutzer und Gruppen.
agorum.workflow.node.script.description=Ausführen von JavaScript.

# start workflow ui
acworkflow.js.startworkflow.description=Bitte wählen Sie den Workflow aus, den Sie starten möchten.
acworkflow.js.startworkflow.workflow=Workflow
acworkflow.js.startworkflow.cancel=Abbrechen
acworkflow.js.startworkflow.start=Starten
acworkflow.js.startworkflow.start.locked=Einen Moment bitte ...
acworkflow.js.startworkflow.load.locked=Lade Workflows ...
acworkflow.asa.start=Workflow starten (mit gewähltem Objekt)
acworkflow.asa.group.workflow=Workflow
acworkflow.asa.main.start=Workflow starten
acworkflow.asa.group.main.workflow=Workflow

# log viewer
acworkflow.js.log.title=Historie
acworkflow.js.log.hide=Historie ausblenden
acworkflow.js.log.show=Historie einblenden
acworkflow.js.log.date=Zeit
acworkflow.js.log.active=Status
acworkflow.js.log.stepDisplayName=Schritt
acworkflow.js.log.assigneeFullName=Bearbeiter
acworkflow.js.log.assigneesFullName=Zugewiesen
acworkflow.js.log.processDisplayName=Prozess
acworkflow.js.log.loading=Laden, bitte warten...
acworkflow.js.log.status.active=Aktiv
acworkflow.js.log.status.killed=Abgebrochen
acworkflow.js.log.status.finished=Abgeschlossen


#
# workflow processes
#
acworkflow.overview.processes.title=Verknüpfte Workflow Prozesse
acworkflow.overview.processes.noProcesses=Keine verknüpften Prozesse vorhanden
acworkflow.overview.processes.processDisplayName=Prozess
acworkflow.overview.processes.status=Status
acworkflow.overview.processes.createDate=Gestartet am
acworkflow.overview.processes.lastModifyDate=Zuletzt geändert
acworkflow.process.status.active=Aktiv
acworkflow.process.status.finished=Beendet

#
# acic
#
acworkflow.workflow.acic.workflowTasks=Workflow Aufgaben
acworkflow.workflow.acic.workflowTasksDev=Workflow Aufgaben (Dev)
acworkflow.workflow.acic.workflowProcesses=Workflow Prozesse


# parameter
acworkflow.editor.object.placeholder=agorum core Objekt, z.B: /agorum/roi/Files/Demo/Willkommen.pdf
acworkflow.editor.filter.placeholder=Filter auf Metadatenname (String oder Regex)
acworkflow.editor.outputVariable.placeholder=Variablenname
acworkflow.editor.inputVariable.placeholder=Variablenname
acworkflow.editor.variable.placeholder=Variablenname
acworkflow.editor.string.placeholder=String oder Platzhalter, z.B: ${nameDerVariable}
acworkflow.editor.positiveNumberOrEmpty.placeholder=Zahl > 0 oder leer
acworkflow.editor.expression.condition.placeholder=Expression z.B: token.variables.menge > 10000
acworkflow.editor.date.placeholder=Datum
acworkflow.editor.text.placeholder=Text oder Platzhalter, z.B: ${nameDerVariable}
acworkflow.editor.expression.placeholder=Expression


