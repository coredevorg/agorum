# Metadata labels

cdev.core.builtin.SystemFlags=Systemflags
cdev.core.builtin.OwnerFullName=Owner
cdev.core.builtin.ExpirationDate=Expiration

cdev.core.meta.Structure=Struktur
cdev.core.meta.Mail=Mail
cdev.core.meta.CreateFolderFlag=CreateFolder Flag
cdev.core.meta.CreateDocumentFlag=CreateDokument Flag
cdev.core.meta.NotCreateFolderFlag=NotCreateFolder Flag
cdev.core.meta.NotCreateDokumentFlag=NotCreateDokument Flag

# Smart assistent develop actions

cdev.core.asa.group.HomeAction=[Develop]
cdev_core.asa.homeactions.dumpAsaProfiles=Dump profiles
cdev.core.asa.homeactions.asaProfiles=Smart Assistent (legacy)
cdev.core.asa.homeactions.asaConfigOverview=Smart Assistent
cdev.core.asa.homeactions.aguilaConsole=aguila console
cdev.core.asa.homeactions.aguilaLogChannel=aguila log channel

cdev.core.asa.develop.group=[Develop]
cdev.core.asa.develop.NewFolderWithAreaAndIdentifier=New Folder
cdev.core.asa.develop.EditMetadataGeneric=Edit Metadata
cdev.core.asa.develop.ObjectInfo=ObjectInfo (legacy)
cdev.core.asa.develop.Inspect=Inspect Object
cdev.core.asa.develop.SavePropertyBundle=Save Property Bundle
cdev.core.asa.develop.LoadPropertyBundle=Load Property Bundle
cdev.core.asa.develop.SaveAsaConfig=Save Asa Config
cdev.core.asa.develop.DisplayJson=Display Json
cdev.core.asa.develop.DumpPackageProfile=Dump Profiles

# Smart assistent ACL management

cdev.core.asa.acl.group=[ACLs]
cdev.core.asa.acl.DynAcl=Dynamische ACL
cdev.core.meta.SelectDynAclRead=Lesen
cdev.core.meta.SelectDynAclProtected=Anlegen
cdev.core.meta.SelectDynAclWrite=Schreiben
cdev.core.meta.SelectDynAclAll=Alles
cdev.core.meta.SelectDynAclOther=Andere
cdev.core.meta.DynAclSelectSameOnly=Nur an Objekte vererben, die denselben ACL besitzen?
cdev.core.meta.DynAclSelectRecursive=ACL rekursiv durch die Ordnerstruktur vererben?
cdev.core.meta.DynAclSelectPrevAcl=Aktuelle ACL der Objekte speichern?
cdev.core.meta.DynAclPrevious=Vorher
cdev.core.meta.DynAclCurrent=Aktuell
cdev.core.meta.DynAclParent=Übergeordnet
cdev.core.meta.DynAclAction=Aktion
cdev.core.meta.DynAclAction.new=Neue ACL mit den oben definierten Berechtigungen erstellen 
cdev.core.meta.DynAclAction.parent=Standard ACL vom übergeordneten Bereich verwenden
cdev.core.meta.DynAclAction.previous=Vorherige ACL verwenden (falls vorhanden, ansonsten übergeordnete)
cdev.core.meta.DynAclAction.update=Aktuelle ACL mit den oben definierten Berechtigungen aktualisieren
cdev.core.meta.DynAclAction.reset_previous=Alle gespeicherten ACLs verwerfen

cdev.core.asa.acl.ScopeAcl=Scope ACL
cdev.core.meta.SelectScopeAclRead=Lesen
cdev.core.meta.SelectScopeAclProtected=Anlegen
cdev.core.meta.SelectScopeAclWrite=Schreiben
cdev.core.meta.SelectScopeAclAll=Alles
cdev.core.meta.ScopeAclSelectClear=Scope-ACLs löschen?
cdev.core.meta.ScopeAclSelectClearRecursive=Rekursiv? 

cdev.core.asa.acl.SelectAcl=Struktur ACL
cdev.core.meta.CurrentAcl=Aktuell
cdev.core.meta.SelectAcl=Neu
cdev.core.meta.PopulateAcl=ACL rekursiv durch die Ordnerstruktur vererben?
cdev.core.meta.SameAclOnly=Nur an Objekte vererben, die denselben ACL besitzen
cdev.core.meta.SetPrevAcl=Aktuelle ACL der Objekte speichern?
cdev.core.meta.ResetPrevAcl=Gespeicherte ACL verwerfen?
cdev.core.meta.PrevAcl=Prev ACL

# Smart assistant admin actions

cdev.core.asa.admin.setup.group=[Setup]
cdev.core.asa.admin.setup.CreateStructure=Struktur anlegen
cdev.core.asa.admin.setup.ApplyGroups=Gruppen aktualisieren
cdev.core.asa.admin.setup.PurgeStructure=Struktur entfernen
cdev.core.asa.admin.setup.ApplyStructure=Struktur installieren

#cdev.core.asa.Description=Beschreibung
#cdev.core.asa.group.admin=[Admin]
#cdev.core.asa.admin.metadata.Generic=Metadaten bearbeiten
#cdev.core.asa.admin.group.folder=Ordner
#cdev.core.asa.admin.folder.NewWithAreaAndIdentifier=Ordner anlegen
#cdev.core.asa.admin.folder.ChangeAreaAndIdentifier=Bearbeiten
#
#cdev.core.asa.attachment.RemoveAttachments=Anhang entfernen
#cdev.core.meta.RemoveAttachmentsFrom=Dokument
#cdev.core.meta.SelectAttachment=Anhang

