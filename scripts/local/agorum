#!/bin/bash
# agorum helper script
#
# agorum [config] mount [DMS] [username] [password]
# agorum [config] vm start|stop [VM] [HOST]
# agorum [config] startup|shutdown
# agorum api [URL] asa "digitec core - AddOn" [username] [password] 
#
# set -x
#
# TODO: implement (sub-)command specific --help
#

PROG=$(basename $0)
SCRIPT="$0"
ARGS="$@"
CFGROOT="$HOME/.local/etc"

# set parms from agorum[-config].cfg
if [ -f "$CFGROOT/agorum-${1}.cfg" ]
then
	source "$CFGROOT/agorum-$1.cfg"
	shift
else
	DMS=${DMS:-"agorum/private"}
	SHARE=${SHARE:-"private"}
	VM=${VM:-"agorum"}
	USERNAME=${USERNAME:-"roi"}
	PASSWORD=${PASSWORD:-"agorum"}
	HOST=${HOST:-"agorum"}
	MOUNT=${MOUNT:-"$HOME/Develop/agorum/mnt"}
	VMROOT=${VMROOT:-"$HOME/Develop/agorum/vm"}
	LINKROOT=${LINKROOT:-"$HOME/Desktop"}
	TMP=${TMP:-$HOME/tmp}
	CFG=$CFGROOT/agorum.cfg
	[ -f "$CFG" ] && source "$CFG"
fi

[ "$PROG" == "agorum" ] && CMD="$1" && shift || CMD=${PROG/agorum-/}

function login() {

    local username=${1:-$USERNAME}
    local password=${2:-$PASSWORD}
	local path="api/rest/session"
	local cookies="$HOME/tmp/agorum.cookies"
	unset AGORUM_sessionId AGORUM_JSESSIONID

	result=$(curl -s -c $cookies \
				  -H "Content-Type: application/x-www-form-urlencoded" \
	              -H "Accept: application/json" \
				  -d "username=${username}&password=${password}" \
				  "$URL/$path")

	[ $(echo $result | jq .success) == true ] || { 
		echo $result | jq -r .message 1>&2 
		rm $cookies
		exit 1;
	}
	AGORUM_sessionId=$(echo $result | jq -r .sessionId)
	AGORUM_JSESSIONID=$(grep JSESSIONID $cookies | awk '{print $7}')
	rm $cookies
}

function logout() {
	
	local sessionId="$AGORUM_sessionId"
	[ "$1" ] && sessionId="$1"
	local path="api/rest/session"

	result=$(curl -s -X DELETE \
				  -H "Content-Type: application/x-www-form-urlencoded" \
	              -H "Accept: application/json" \
				  -d "sessionId=$sessionId" \
				  "$URL/$path")

	[ $(echo $result | jq .success) == true ] || { 
		echo $result | jq -r .message 1>&2 
		rm $cookies
		exit 1;
	}
	unset AGORUM_sessionId AGORUM_JSESSIONID
}

function vm-start() {

	local vm=${1:-$VM}
	local host=${2:-$HOST}
	local vmx="${VMROOT}/$vm.vmwarevm/$vm.vmx"
	local counter=0 stamp=$(date '+%Y-%m-%d_%H%M%S')

	vmrun list | grep -q $vmx || {
		echo "starting [$vm] ..."
		echo "creating snapshop [$stamp]"
		vmrun snapshot "$vmx" "$stamp" || exit 
		vmrun start "$vmx" nogui || exit
		echo -n "waiting for host ."
		until ping -c1 -t1 -W1 $host >/dev/null 2>&1
		do
			echo -n "."
			let counter++
			[ $counter -gt 60 ] && exit
		done
		echo ""
		ssh root@$host "/opt/agorum/agorumcore/scripts/agorumcore start"
	}
}

function vm-stop() {

	local vm=${1:-$VM} 
	local host=${2:-$HOST}
	local vmx="${VMROOT}/$vm.vmwarevm/$vm.vmx"

	vmrun list | grep -q $vmx && {
		# umount agorum
		ssh root@$host "/opt/agorum/agorumcore/scripts/agorumcore stop"
		vmrun stop "$vmx"
	}
}

# agorum mount [agorum/dms] [roi] [agorum] 
function cifs-mount() {

	local dms=${1:-$DMS}
	local username=${2:-$USERNAME}
	local password=${3:-$PASSWORD}
	set -- ${dms//\// }
	local host="$1"
	dms="$2"
	local mount="${MOUNT}/${host}/${dms}"
	local link="$host [$dms]"

	[ -d "$mount" ] || mkdir -p "$mount"
	mount | grep -q "$mount" || {
		mount -t smbfs cifs://${username}:${password}@${host}/${dms} "$mount"
		[ -f "${LINKROOT}/${link}" ] || { sleep 3 ; mkalias $mount $LINKROOT "$link"; }
	}
}

function cifs-umount() {

	local dms=${1:-$DMS}
	local username=${2:-$USERNAME}
	local password=${3:-$PASSWORD}
	set -- ${dms//\// }
	local host="$1"
	dms="$2"
	local mount="${MOUNT}/${host}/${dms}"
	local link="$host [$dms]"

	mount | grep -q "$mount" && {
		[ -f "${LINKROOT}/${link}" ] && rm "${LINKROOT}/${link}"
		umount -f "$mount"
	}
}

case "$CMD" in

mount)			cifs-mount "$@"
				;;

umount)			cifs-umount "$@"
				;;

vm)				# start/stop agorum vms
				SUBCMD="$1" ; shift
				case "$SUBCMD" in
				start)	vm-start "$@" ;;
				stop)	vm-stop "$@"  ;;
				esac
				;;

api)            # command line interface to agorum REST api
				case "$1" in
				http*) URL="$1" ; shift ;;
				*) URL="http://$HOST" ; SUBCMD="$1" ; shift ;;
				esac
				case "$SUBCMD" in
				login) 	# just login and set JSESSIONID cookie
						login "$1" "$2"
						echo "export AGORUM_sessionId=$AGORUM_sessionId"
						echo "export AGORUM_JSESSIONID=$AGORUM_JSESSIONID"
						;;
				logout)	logout "$1"
						;;
				asa)	profile="$1" ; shift
						path="api/rest/faconfigdesigner/export"
						[ "$AGORUM_JSESSIONID" ] || login "$1" "$2"
						curl -b "JSESSIONID=$AGORUM_JSESSIONID" \
						  	 -o "$profile.zip" \
							 -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
							 -H 'Accept-Encoding: gzip, deflate' \
							 "$URL/$path/${profile// /%20}"
						;;
				esac
				;;

startup)		# agorum [cfg] startup
				vm-start
        		cifs-mount

				private=$(mount | grep $MOUNT | sed 's/.* on \(.*\) (.*/\1/')
				[ -d "$private/$DEVELOP" ] && [ -d "$WORKDIR" ] && {
					cd "$WORKDIR"	
					ln -sf "$private/$DEVELOP" .
					export GIT_DIR="$(pwd)/.git"
					vc -n cdev.core 
				} 
				;;

shutdown)		# agorum [cfg] shutdown
				cd "$WORKDIR" && {
					project=$(basename $DEVELOP)
					[ -L "$project" ] && unlink "$project"
				}
        		cifs-umount 
        		vm-stop
				;;

status)			# agorum status [cfg]
				vmrun list | grep $VM
				mount | grep $DMS
				;;

esac
